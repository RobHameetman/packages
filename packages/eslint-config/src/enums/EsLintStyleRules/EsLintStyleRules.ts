export enum EsLintStyleRules {
	ArrayBracketNewline = 'array-bracket-newline',
	ArrayBracketSpacing = 'array-bracket-spacing',
	ArrayElementNewline = 'array-element-newline',
	BlockSpacing = 'block-spacing',
	BraceStyle = 'brace-style',
	Camelcase = 'camelcase',
	CapitalizedComments = 'capitalized-comments',
	CommaDangle = 'comma-dangle',
	CommaSpacing = 'comma-spacing',
	CommaStyle = 'comma-style',
	ComputedPropertySpacing = 'computed-property-spacing',
	ConsistentThis = 'consistent-this',
	EolLast = 'eol-last',
	FuncCallSpacing = 'func-call-spacing',
	FuncNameMatching = 'func-name-matching',
	FuncNames = 'func-names',
	FuncStyle = 'func-style',
	FunctionCallArgumentNewline = 'function-call-argument-newline',
	FunctionParenNewline = 'function-paren-newline',
	IdBlacklist = 'id-blacklist',
	IdLength = 'id-length',
	IdMatch = 'id-match',
	ImplicitArrowLinebreak = 'implicit-arrow-linebreak',
	Indent = 'indent',
	JsxQuotes = 'jsx-quotes',
	KeySpacing = 'key-spacing',
	KeywordSpacing = 'keyword-spacing',
	LineCommentPosition = 'line-comment-position',
	LinebreakStyle = 'linebreak-style',
	LinesAroundComment = 'lines-around-comment',
	LinesBetweenClassMembers = 'lines-between-class-members',
	MaxDepth = 'max-depth',
	MaxLen = 'max-len',
	MaxLines = 'max-lines',
	MaxLinesPerFunction = 'max-lines-per-function',
	MaxNestedCallbacks = 'max-nested-callbacks',
	MaxParams = 'max-params',
	MaxStatements = 'max-statements',
	MaxStatementsPerLine = 'max-statements-per-line',
	MultilineCommentStyle = 'multiline-comment-style',
	MultilineTernary = 'multiline-ternary',
	NewCap = 'new-cap',
	NewParens = 'new-parens',
	NewlinePerChainedCall = 'newline-per-chained-call',
	NoArrayConstructor = 'no-array-constructor',
	NoBitwise = 'no-bitwise',
	NoContinue = 'no-continue',
	NoInlineComments = 'no-inline-comments',
	NoLonelyIf = 'no-lonely-if',
	NoMixedOperators = 'no-mixed-operators',
	NoMixedSpacesAndTabs = 'no-mixed-spaces-and-tabs',
	NoMultiAssign = 'no-multi-assign',
	NoMultipleEmptyLines = 'no-multiple-empty-lines',
	NoNegatedCondition = 'no-negated-condition',
	NoNestedTernary = 'no-nested-ternary',
	NoNewObject = 'no-new-object',
	NoPlusPlus = 'no-plusplus',
	NoRestrictedSyntax = 'no-restricted-syntax',
	NoTabs = 'no-tabs',
	NoTernary = 'no-ternary',
	NoTrailingSpaces = 'no-trailing-spaces',
	NoUnderscoreDangle = 'no-underscore-dangle',
	NoUnneededTernary = 'no-unneeded-ternary',
	NoWhitespaceBeforeProperty = 'no-whitespace-before-property',
	NonblockStatementBodyPosition = 'nonblock-statement-body-position',
	ObjectCurlyNewline = 'object-curly-newline',
	ObjectCurlySpacing = 'object-curly-spacing',
	ObjectPropertyNewline = 'object-property-newline',
	OneVar = 'one-var',
	OneVarDeclarationPerLine = 'one-var-declaration-per-line',
	OperatorAssignment = 'operator-assignment',
	OperatorLinebreak = 'operator-linebreak',
	PaddedBlocks = 'padded-blocks',
	PaddingLineBetweenStatements = 'padding-line-between-statements',
	PreferExponentiationOperator = 'prefer-exponentiation-operator',
	PreferObjectSpread = 'prefer-object-spread',
	QuoteProps = 'quote-props',
	Quotes = 'quotes',
	Semi = 'semi',
	SemiSpacing = 'semi-spacing',
	SemiStyle = 'semi-style',
	SortKeys = 'sort-keys',
	SortVars = 'sort-vars',
	SpaceBeforeBlocks = 'space-before-blocks',
	SpaceBeforeFunctionParen = 'space-before-function-paren',
	SpaceInParens = 'space-in-parens',
	SpaceInfixOps = 'space-infix-ops',
	SpaceUnaryOps = 'space-unary-ops',
	SpacedComment = 'spaced-comment',
	SwitchColonSpacing = 'switch-colon-spacing',
	TemplateTagSpacing = 'template-tag-spacing',
	UnicodeBom = 'unicode-bom',
	WrapRegex = 'wrap-regex',
}

export type EsLintStyleRule = keyof typeof EsLintStyleRules;

export const isEsLintStyleRule = (value: unknown): value is EsLintStyleRule =>
	typeof value === 'string' &&
	(Object.values(EsLintStyleRules) as Array<string>).includes(value);
